/**
 * This program creates a simple "hash" of
 * a person's name. A hash is an integer that is
 * mathematically derived from another object.
 * In this case, a string (the first and last name)
 * is accessed character by character and the hash
 * is built up from a number generated by each character.
 * While this function does not necessarily produce
 * unique hashes (different names can hash to the
 * same value), there is a relatively low possibility
 * of a "collision" with a class of roughly 400 students.
 *
 * We will learn more about hashing later this quarter!
 */

#include <iostream>
#include <string>
#include "console.h"
#include "simpio.h"  // for getLine
#include <iomanip>   // format output
#include <cmath>
using namespace std;

/* 开胃菜小程序
 * 输出三角形
 */

void triangleShape(int layer);  // 三角形 "*"
void openTriangleShape(int layer);  //  空心三角形 "*"
void openTriangleShapeWithLineNumber(int layer);  // 空心三角形，行号



int main() {

    int layer=5;
    cout << "please input layer values: ";
    cin >> layer;
//    layer == 0? (layer = 6) : (layer=layer+0);
    layer = (layer == 0? 6:layer);
    cout << "Your input number is " << layer << endl;
    triangleShape(layer);
    openTriangleShape(layer);
    openTriangleShapeWithLineNumber(layer);
    return 0;
}

void triangleShape(int layer)
{
    cout << "This is a full triangle" << endl;
    if(layer % 2 == 1){
        for(int i = layer; i > 0; i--){
            for (int j = -layer+1 ; j < layer; j++){
                int sumIJ = abs(i)+abs(j);
                //            if((sumIJ == layer) && (sumIJ %2 == 1)){
                if((sumIJ <= layer && sumIJ%2 == 1) || (i==0+1 && abs(j) % 2 == 0)){
                    //                if(sumIJ <= layer){
                    cout << "*";
                } else{
                    cout << " ";
                }
            }
            cout << endl;
        }
    }
    else{
        for(int i = layer; i > 0; i--){
            for (int j = -layer+1 ; j < layer; j++){
                int sumIJ = abs(i)+abs(j);
                //            if((sumIJ == layer) && (sumIJ %2 == 1)){
                if((sumIJ <= layer && sumIJ%2 == 0) || (i==0+1 && abs(j) % 2 == 1)){
                    //                if(sumIJ <= layer){
                    cout << "*";
                } else{
                    cout << " ";
                }
            }
            cout << endl;
        }
    }
}

void openTriangleShape(int layer)
{
    cout << "This is a open triangle" << endl;
    if(layer % 2 == 1){
        for(int i = layer; i > 0; i--){
            for (int j = -layer+1 ; j < layer; j++){
                int sumIJ = abs(i)+abs(j);
                if((sumIJ == layer) || (i==0+1 && abs(j) % 2 == 0)){
                    cout << "*";
                } else{
                    cout << " ";
                }
            }
            cout << endl;
        }
    }
    else{
        for(int i = layer; i > 0; i--){
            for (int j = -layer+1 ; j < layer; j++){
                int sumIJ = abs(i)+abs(j);
                if((sumIJ == layer) || (i==0+1 && abs(j) % 2 == 1)){
                    cout << "*";
                } else{
                    cout << " ";
                }
            }
            cout << endl;
        }
    }
}

void openTriangleShapeWithLineNumber(int layer)
{
    cout << "This is a open triangle with line number" << endl;
    int outLength;
//    outLength =  layer / 10 + 1;
    outLength =  log10(layer) + 1; // 定宽
    cout << "outLength = " <<outLength<< endl;

    if(layer % 2 == 1){
        for(int i = layer; i > 0; i--){
            for (int j = -layer+1 ; j < layer; j++){
                int sumIJ = abs(i)+abs(j);
                if((sumIJ == layer) || (i==0+1 && abs(j) % 2 == 0)){
//                    cout.width(outLength);
                    cout << setw(outLength)<< layer-i+1;
                } else{
                    cout << setw(outLength)<< " ";
                }
            }
            cout << endl;
        }
    }
    else{
        for(int i = layer; i > 0; i--){
            for (int j = -layer+1 ; j < layer; j++){
                int sumIJ = abs(i)+abs(j);
                if((sumIJ == layer) || (i==0+1 && abs(j) % 2 == 1)){
//                    cout.width(outLength);
                    cout << setw(outLength)<< layer-i+1;
                } else{
                    cout << setw(outLength)<< " ";
                }
            }
            cout << endl;
        }
    }
}


//for (int i = layer; j >= 0; i--){
//    for (int j = -layer; j <= layer; j++){
//        int sum = abs(i)+abs(j);
//        if (sum <= layer && (sum - 1)$2 == 0 && i==0){
//            cout << "*";
//        }
//    }
//    cout << endl;
//}
